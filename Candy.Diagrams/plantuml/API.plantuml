@startuml
' Set direction for the diagram
left to right direction

title API Layer

package "03. BLL (Interfaces)" {
    interface IBrandService { }
    interface ICategoryService { }
    interface ICandyService { }
    interface IUserService { }
    interface IOrderService { }
}

package "05. DTOs" {
    package Products {
        class Brand { }
        class Category { }
        class Candy { }
    }
    package Users {
        class UserLoginFormDTO { }
        class UserRegisterFormDTO { }
    }
    package Orders {
        class PlaceOrderRequestDto { }
        class OrderItemDto { }
        class OrderResponseDto { }
        class OrderItemResponseDto { }
    }
    Products.Candy --> Products.Brand
    Products.Candy --> Products.Category
    Orders.PlaceOrderRequestDto --> Orders.OrderItemDto
    Orders.OrderResponseDto --> Orders.OrderItemResponseDto
}

package "04. API Layer" {
    package Controllers {
        class AuthController {
            + AuthController(IUserService userService)
            + IActionResult Register(...)
            + IActionResult Login(...)
        }
        AuthController ..> IUserService : uses
        AuthController ..> Users.UserRegisterFormDTO
        AuthController ..> Users.UserLoginFormDTO
        ' Assuming AuthResponseDto is returned by Login, add dependency if needed
    }

    package Controllers.Products {
        class BrandsController {
            + BrandsController(IBrandService brandService)
            + IActionResult GetAll()
            + IActionResult GetById(int id)
            + IActionResult Create(...)
            + IActionResult Update(...)
            + IActionResult Delete(int id)
        }
        BrandsController ..> IBrandService : uses
        BrandsController ..> Products.Brand

        class CategoriesController {
            + CategoriesController(ICategoryService categoryService)
            + IActionResult GetAll()
            + IActionResult GetById(int id)
            + IActionResult Create(...)
            + IActionResult Update(...)
            + IActionResult Delete(int id)
        }
        CategoriesController ..> ICategoryService : uses
        CategoriesController ..> Products.Category

        class CandiesController {
            + CandiesController(ICandyService candyService)
            + IActionResult GetAll()
            + IActionResult GetById(int id)
            + IActionResult Create(...)
            + IActionResult Update(...)
            + IActionResult Delete(int id)
            + IActionResult IncrementStock(...)
            + IActionResult DecrementStock(...)
            + IActionResult GetTaxFreePrice(...)
        }
        CandiesController ..> ICandyService : uses
        CandiesController ..> Products.Candy
        CandiesController ..> Products.Brand
        CandiesController ..> Products.Category
    }

    package Controllers.Orders {
        class OrdersController {
            + OrdersController(IOrderService orderService)
            + IActionResult PlaceOrder(...)
            + IActionResult GetMyOrders()
            + IActionResult UpdateStatus(...)
        }
        OrdersController ..> IOrderService : uses
        OrdersController ..> Orders.PlaceOrderRequestDto
        OrdersController ..> Orders.OrderResponseDto
    }

    package Mappers {
        class ProductsMapper {
            {static} + ToBll(Api.Products.Brand): Bll.Products.Brand
            {static} + ToApi(Bll.Products.Brand): Api.Products.Brand
            {static} + ToBll(Api.Products.Category): Bll.Products.Category
            {static} + ToApi(Bll.Products.Category): Api.Products.Category
            {static} + ToBll(Api.Products.Candy): Bll.Products.Candy
            {static} + ToApi(Bll.Products.Candy): Api.Products.Candy
        }
        ProductsMapper ..> Products.Brand
        ProductsMapper ..> Products.Category
        ProductsMapper ..> Products.Candy
        ProductsMapper ..> BLL.Models.Products.Brand
        ProductsMapper ..> BLL.Models.Products.Category
        ProductsMapper ..> BLL.Models.Products.Candy

        class OrdersMapper {
            {static} + ToBll(Api.Orders.PlaceOrderRequestDto): Bll.Orders.Order
            {static} + ToBll(Api.Orders.OrderItemDto): Bll.Orders.OrderItem
            {static} + ToApi(Bll.Orders.Order): Api.Orders.OrderResponseDto
            {static} + ToApi(Bll.Orders.OrderItem): Api.Orders.OrderItemResponseDto
        }
        OrdersMapper ..> Orders.PlaceOrderRequestDto
        OrdersMapper ..> Orders.OrderItemDto
        OrdersMapper ..> Orders.OrderResponseDto
        OrdersMapper ..> Orders.OrderItemResponseDto
        OrdersMapper ..> BLL.Models.Orders.Order
        OrdersMapper ..> BLL.Models.Orders.OrderItem
    }
}


@enduml